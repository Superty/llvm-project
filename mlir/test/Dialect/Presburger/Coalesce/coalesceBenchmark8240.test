// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance8240
func @performance8240() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10)[p0, p1, p2] : (-p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -p0 d7  + 1 = 0 and p0  + -1 >= 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and -p0 d1  >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -d1 + d7  = 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and -p1 d2  >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -d1 + d7  + 1 = 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  + -1 >= 0 and p0 -d1  + -1 >= 0 and -d2  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  = 0 and -d1 + d7  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  >= 0 and p1 -d2  + -1 >= 0 and d3  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  + 1 = 0 and -d1 + d7  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  + -1 >= 0 and p1 -d2  + -1 >= 0 and -d3  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -d1 + d7  + 1 = 0 and d2  = 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  + -1 >= 0 and p0 -d1  + -1 >= 0 and -d3  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  = 0 and -d1 + d7  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  >= 0 and p1 -d2  + -1 >= 0 and -d0 + d4  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  + 1 = 0 and -d1 + d7  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  + -1 >= 0 and p1 -d2  + -1 >= 0 and d0 + -d4  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -d1 + d7  + 1 = 0 and d3  = 0 and d2  = 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  + -1 >= 0 and p0 -d1  + -1 >= 0 and d0 + -d4  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  = 0 and -d1 + d7  = 0 and -d0 + d4  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  >= 0 and p1 -d2  + -1 >= 0 and d5  + -3 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  + 1 = 0 and -d1 + d7  = 0 and -d0 + d4  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  + -1 >= 0 and p1 -d2  + -1 >= 0 and -d5  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -d1 + d7  + 1 = 0 and -d0 + d4  = 0 and d3  = 0 and d2  = 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  + -1 >= 0 and p0 -d1  + -1 >= 0 and -d5  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  = 0 and -d1 + d7  = 0 and d5  + -2 = 0 and -d0 + d4  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  >= 0 and p1 -d2  + -1 >= 0 and -p2 d6  + -1 >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  + 1 = 0 and -d1 + d7  = 0 and d5  = 0 and -d0 + d4  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  + -1 >= 0 and p1 -d2  + -1 >= 0 and -d6  >= 0  or -d6 + d10  + 1 = 0 and -d0 + d9  = 0 and -d2 + d8  = 0 and -d1 + d7  = 0 and d5  + -2 = 0 and -d0 + d4  = 0 and d3  = 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  >= 0 and p0 -d1  + -1 >= 0 and d2  >= 0 and p1 -d2  + -1 >= 0 and d6  + -1 >= 0 and p2 -d6  >= 0  or -p2 d10  + 1 = 0 and -d0 + d9  = 0 and -p1 d8  + 1 = 0 and -d1 + d7  + 1 = 0 and d5  = 0 and -d0 + d4  = 0 and d3  = 0 and d2  = 0 and p1  + -1 >= 0 and d0  >= 0 and p2 -d0  + -1 >= 0 and d1  + -1 >= 0 and p0 -d1  + -1 >= 0 and -d6  >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<11,3>
  %e = presburger.equal %set, %r : !presburger.set<11,3>, !presburger.set<11,3>
  return %e : i1
}

// ----
