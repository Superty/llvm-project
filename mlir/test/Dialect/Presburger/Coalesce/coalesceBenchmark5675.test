// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance5675
func @performance5675() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5)[p0] : (-p0 d5  + -1 = 0 and -p0 d4  = 0 and -p0  + 1198 >= 0 and -d0  + 1 >= 0  or -p0 d5  + -1 = 0 and -p0 d4  = 0 and d0  + -2 = 0 and -p0  + 1198 >= 0 and -d1  + -2 >= 0  or -p0 -d1 + d5  + -2 = 0 and -p0 d4  = 0 and d0  + -2 = 0 and d1  >= 0 and -p0 -d1  + 1197 >= 0 and d2  + -1 >= 0  or -p0 -d1 + d5  + -1 = 0 and -p0 d4  = 0 and d0  + -2 = 0 and d1  >= 0 and -p0 -d1  + 1198 >= 0 and -d2  + -1 >= 0  or -p0 -d1 + d5  + -2 = 0 and -p0 d4  = 0 and d2  = 0 and d0  + -2 = 0 and d1  >= 0 and -p0 -d1  + 1197 >= 0 and d3  + -1 >= 0  or -p0 -d1 + d5  + -1 = 0 and -p0 d4  = 0 and d2  = 0 and d0  + -2 = 0 and d1  >= 0 and -p0 -d1  + 1198 >= 0 and -d3  >= 0  or -p0 d5  + -1 = 0 and -p0 d4  = 0 and d1  + 1 = 0 and d0  + -2 = 0 and -p0  + 1198 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<6,1>
  %e = presburger.equal %set, %r : !presburger.set<6,1>, !presburger.set<6,1>
  return %e : i1
}

// ----
