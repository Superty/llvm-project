// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance3841
func @performance3841() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3)[] : (d3  = 0 and d2 + -499 = 0 and d1 + -498 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -497 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -496 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -499 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -498 = 0 and d1 + -497 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -498 = 0 and d1 + -496 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -498 = 0 and d1 + -495 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -498 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -498 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -498 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -497 = 0 and d1 + -495 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -497 = 0 and d1 + -494 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -497 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -497 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -497 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -497 = 0 and d1 + -480 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -493 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -480 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -479 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -478 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -496 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -495 = 0 and d1 + -494 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -486 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -485 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -485 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -484 = 0 and d1 + -483 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -484 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -484 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -483 = 0 and d1 + -482 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -483 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -482 = 0 and d1 + -481 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -33 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -32 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -32 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -31 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -31 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -30 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -30 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -29 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -18 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -18 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -17 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -17 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -17 = 0 and d1 + -2 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -17 = 0 and d1 + -1 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -17 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -16 = 0 and d1 + -15 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -16 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -16 = 0 and d1 + -13 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -16 = 0 and d1 + -1 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -16 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -15 = 0 and d1 + -14 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -15 = 0 and d1 + -12 = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -15 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -3 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -2 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0  or d3  = 0 and d2 + -1 = 0 and d1  = 0 and d0 + -1 >= 0 and -d0 + 999 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<4,0>
  %e = presburger.equal %set, %r : !presburger.set<4,0>, !presburger.set<4,0>
  return %e : i1
}

// ----
