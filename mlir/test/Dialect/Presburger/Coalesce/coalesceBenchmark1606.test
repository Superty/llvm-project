// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance1606
func @performance1606() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2)[] : (d2 + -9 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -8 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -7 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -6 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -5 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -4 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -3 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -2 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2 + -1 = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0  or d2  = 0 and d0  >= 0 and -d0 + 511 >= 0 and d1  >= 0 and -d1 + 511 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<3,0>
  %e = presburger.equal %set, %r : !presburger.set<3,0>, !presburger.set<3,0>
  return %e : i1
}

// ----
