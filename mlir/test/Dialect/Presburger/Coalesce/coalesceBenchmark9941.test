// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance9941
func @performance9941() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23, d24)[p0] : (d24  = 0 and d23  = 0 and d22  + 2 = 0 and -d5 + d21  = 0 and d20  = 0 and -d4 + d19  = 0 and d18  = 0 and -p0 d17  = 0 and d16  = 0 and -p0 d15  = 0 and d14  = 0 and d13  + -1 = 0 and d12  + -34 = 0 and d11  + -34 = 0 and -d6 + d7  + 136 = 0 and -p0 d3  = 0 and -p0 d2  = 0 and d1  + -1 = 0 and d0  + -34 = 0 and p0  >= 0 and d6  + -136 >= 0 and -d6  + 137 >= 0 and -16p0 d6 + d8  + -139 >= 0 and -d8  + 383 >= 0 and 16p0 d6 + -d8  + -127 >= 0 and -10d4 + d6 + d9  + -136 >= 0 and d9  + -1 >= 0 and -d9  + 382 >= 0 and 10d4 + -d6 + -d9  + 145 >= 0 and -32d5 + d6 + d10  + -136 >= 0 and d10  + -1 >= 0 and -d10  + 382 >= 0 and 32d5 + -d6 + -d10  + 167 >= 0  or d24  = 0 and d23  = 0 and d22  + 2 = 0 and -d5 + d21  = 0 and d20  = 0 and -d4 + d19  = 0 and d18  = 0 and -p0 d17  = 0 and d16  = 0 and -p0 d15  = 0 and d14  = 0 and d13  + -1 = 0 and d12  + -34 = 0 and d11  + -34 = 0 and -d6 + d7  + 136 = 0 and -p0 d3  = 0 and -p0 d2  = 0 and d1  + -1 = 0 and d0  + -34 = 0 and p0  >= 0 and d6  + -136 >= 0 and -d6  + 137 >= 0 and -16p0 d6 + d8  + -137 >= 0 and -d8  + 381 >= 0 and 16p0 d6 + -d8  + -129 >= 0 and -10d4 + d6 + d9  + -136 >= 0 and d9  + -1 >= 0 and -d9  + 382 >= 0 and 10d4 + -d6 + -d9  + 145 >= 0 and -32d5 + d6 + d10  + -136 >= 0 and d10  + -1 >= 0 and -d10  + 382 >= 0 and 32d5 + -d6 + -d10  + 167 >= 0  or d24  = 0 and d23  = 0 and d22  + 2 = 0 and -d5 + d21  = 0 and d20  = 0 and -d4 + d19  = 0 and d18  = 0 and -p0 d17  = 0 and d16  = 0 and -p0 d15  = 0 and d14  = 0 and d13  + -1 = 0 and d12  + -34 = 0 and d11  + -34 = 0 and -d6 + d7  + 136 = 0 and -p0 d3  = 0 and -p0 d2  = 0 and d1  + -1 = 0 and d0  + -34 = 0 and p0  >= 0 and d6  + -136 >= 0 and -d6  + 137 >= 0 and -16p0 d6 + d8  + -138 >= 0 and -d8  + 382 >= 0 and 16p0 d6 + -d8  + -128 >= 0 and -10d4 + d6 + d9  + -135 >= 0 and d9  >= 0 and -d9  + 383 >= 0 and 10d4 + -d6 + -d9  + 146 >= 0 and -32d5 + d6 + d10  + -135 >= 0 and d10  >= 0 and -d10  + 383 >= 0 and 32d5 + -d6 + -d10  + 168 >= 0 and -10d4 + d6  + 246 >= 0 and -32d5 + d6  + 246 >= 0 and 32d5 + -d6  + 166 >= 0 and 10d4 + -d6  + 144 >= 0 and 10d4 + 32d5 + -2d6 + -d9 + -d10  + 313 >= 0 and 10d4 + -d6 + -d9 + -d10  + 528 >= 0 and 32d5 + -d6 + d9 + -d10  + 167 >= 0 and -10d4 + -32d5 + 2d6 + d9 + d10  + -271 >= 0 and -10d4 + d6 + d9 + d10  + -136 >= 0 and -32d5 + d6 + -d9 + d10  + 247 >= 0 and -32d5 + d6 + d9 + d10  + -136 >= 0 and -d9 + d10  + 382 >= 0 and d9 + d10  + -1 >= 0 and 10d4 + -32d5 + -d9 + d10  + 10 >= 0 and 10d4 + -d6 + -d9 + d10  + 145 >= 0 and -10d4 + d6 + d9 + -d10  + 247 >= 0 and -10d4 + 32d5 + d9 + -d10  + 32 >= 0 and -d9 + -d10  + 765 >= 0 and d9 + -d10  + 382 >= 0 and 32d5 + -d6 + -d9 + -d10  + 550 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<25,1>
  %e = presburger.equal %set, %r : !presburger.set<25,1>, !presburger.set<25,1>
  return %e : i1
}

// ----
