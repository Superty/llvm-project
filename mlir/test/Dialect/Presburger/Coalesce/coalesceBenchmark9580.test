// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance9580
func @performance9580() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10, d11, d12, d13, d14, d15, d16, d17, d18, d19, d20, d21, d22, d23)[p0] : (d23  = 0 and d22  = 0 and d21  + 2 = 0 and -d5 + d20  = 0 and d19  = 0 and -d4 + d18  = 0 and d17  = 0 and -p0 d16  = 0 and d15  = 0 and -p0 d14  = 0 and d13  = 0 and d12  + -1 = 0 and d11  + -2 = 0 and -d6 + d7  + 10 = 0 and -p0 d3  = 0 and -p0 d2  = 0 and d1  + -1 = 0 and d0  + -2 = 0 and -10d4 + d6  + 246 >= 0 and -32d5 + d6  + 246 >= 0 and d6  + -10 >= 0 and -d6  + 11 >= 0 and 32d5 + -d6  + 38 >= 0 and 10d4 + -d6  + 16 >= 0 and -16p0 -d6 + d8  + 8 >= 0 and -d8  + 255 >= 0 and 16p0 -d6 + -d8  + 20 >= 0 and -10d4 + d6 + d9  + -7 >= 0 and d9  >= 0 and -d9  + 255 >= 0 and 10d4 + -d6 + -d9  + 18 >= 0 and -32d5 + d6 + d10  + -7 >= 0 and d10  >= 0 and -d10  + 255 >= 0 and 32d5 + -d6 + -d10  + 40 >= 0 and p >= 0  or d23  = 0 and d22  = 0 and d21  + 2 = 0 and -d5 + d20  = 0 and d19  = 0 and -d4 + d18  = 0 and d17  = 0 and -p0 d16  = 0 and d15  = 0 and -p0 d14  = 0 and d13  = 0 and d12  + -1 = 0 and d11  + -2 = 0 and -d6 + d7  + 10 = 0 and -p0 d3  = 0 and -p0 d2  = 0 and d1  + -1 = 0 and d0  + -2 = 0 and -10d4 + d6  + 246 >= 0 and -32d5 + d6  + 246 >= 0 and d6  + -10 >= 0 and -d6  + 11 >= 0 and 32d5 + -d6  + 38 >= 0 and 10d4 + -d6  + 16 >= 0 and -16p0 -d6 + d8  + 10 >= 0 and -d8  + 253 >= 0 and 16p0 -d6 + -d8  + 18 >= 0 and -10d4 + d6 + d9  + -7 >= 0 and d9  >= 0 and -d9  + 255 >= 0 and 10d4 + -d6 + -d9  + 18 >= 0 and -32d5 + d6 + d10  + -7 >= 0 and d10  >= 0 and -d10  + 255 >= 0 and 32d5 + -d6 + -d10  + 40 >= 0 and p >= 0  or d23  = 0 and d22  = 0 and d21  + 2 = 0 and -d5 + d20  = 0 and d19  = 0 and -d4 + d18  = 0 and d17  = 0 and -p0 d16  = 0 and d15  = 0 and -p0 d14  = 0 and d13  = 0 and d12  + -1 = 0 and d11  + -2 = 0 and -d6 + d7  + 10 = 0 and -p0 d3  = 0 and -p0 d2  = 0 and d1  + -1 = 0 and d0  + -2 = 0 and -10d4 + d6  + 246 >= 0 and -32d5 + d6  + 246 >= 0 and d6  + -10 >= 0 and -d6  + 11 >= 0 and 32d5 + -d6  + 38 >= 0 and 10d4 + -d6  + 16 >= 0 and -16p0 -d6 + d8  + 9 >= 0 and -d8  + 254 >= 0 and 16p0 -d6 + -d8  + 19 >= 0 and -10d4 + d6 + d9  + -7 >= 0 and d9  >= 0 and -d9  + 255 >= 0 and 10d4 + -d6 + -d9  + 18 >= 0 and -32d5 + d6 + d10  + -7 >= 0 and d10  >= 0 and -d10  + 255 >= 0 and 32d5 + -d6 + -d10  + 40 >= 0 and d8  + -1 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<24,1>
  %e = presburger.equal %set, %r : !presburger.set<24,1>, !presburger.set<24,1>
  return %e : i1
}

// ----
