// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance8282
func @performance8282() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6)[p0, p1, p2] : (-d2 + d6  = 0 and -d1 + d5  + -1 = 0 and -d0 + d4  = 0 and p + -2147483648 >= 0 and p + -141 >= 0 and d0  >= 0 and p0 -d0  + -1 >= 0 and d1  >= 0 and p1 -d1  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and -d1 + d5  + -1 = 0 and -d0 + d4  = 0 and -p + 2147483647 >= 0 and p + -2147483648 >= 0 and d0  >= 0 and p0 -d0  + -1 >= 0 and d1  >= 0 and p1 -d1  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and -d1 + d5  + -1 = 0 and -d0 + d4  = 0 and p + -2147483648 >= 0 and -p + 140 >= 0 and p + -161 >= 0 and d0  >= 0 and p0 -d0  + -1 >= 0 and d1  >= 0 and p1 -d1  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and -d1 + d5  + -1 = 0 and -d0 + d4  = 0 and p + -2147483648 >= 0 and -p + 140 >= 0 and -p + 160 >= 0 and d0  >= 0 and p0 -d0  + -1 >= 0 and d1  >= 0 and p1 -d1  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and -d1 + d5  + -1 = 0 and -d0 + d4  = 0 and -p + 2147483647 >= 0 and -p + 2147483647 >= 0 and p + -2147483648 >= 0 and d0  >= 0 and p0 -d0  + -1 >= 0 and d1  >= 0 and p1 -d1  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and -d1 + d5  + -1 = 0 and -d0 + d4  = 0 and -p2 d3  + 1 = 0 and -p + 2147483647 >= 0 and -p + 2147483647 >= 0 and -p + 2147483647 >= 0 and d0  >= 0 and p0 -d0  + -1 >= 0 and d1  >= 0 and p1 -d1  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0  or -d2 + d6  = 0 and d5  = 0 and -d0 + d4  + -1 = 0 and -p2 d3  + 1 = 0 and -p1 d1  + 1 = 0 and -p + 2147483647 >= 0 and p + -1 >= 0 and -p + 2147483647 >= 0 and -p + 2147483647 >= 0 and d0  >= 0 and p0 -d0  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0  or -d2 + d6  = 0 and d5  = 0 and -d0 + d4  + -1 = 0 and -p1 d1  + 1 = 0 and p + -2147483648 >= 0 and p + -141 >= 0 and d0  >= 0 and p0 -d0  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and d5  = 0 and -d0 + d4  + -1 = 0 and -p1 d1  + 1 = 0 and -p + 2147483647 >= 0 and p + -2147483648 >= 0 and d0  >= 0 and p0 -d0  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and d5  = 0 and -d0 + d4  + -1 = 0 and -p1 d1  + 1 = 0 and p + -2147483648 >= 0 and p + -1 >= 0 and -p + 140 >= 0 and p + -161 >= 0 and d0  >= 0 and p0 -d0  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and d5  = 0 and -d0 + d4  + -1 = 0 and -p1 d1  + 1 = 0 and p + -2147483648 >= 0 and p + -1 >= 0 and -p + 140 >= 0 and -p + 160 >= 0 and d0  >= 0 and p0 -d0  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0  or -d2 + d6  = 0 and d5  = 0 and -d0 + d4  + -1 = 0 and -p1 d1  + 1 = 0 and -p + 2147483647 >= 0 and p + -1 >= 0 and -p + 2147483647 >= 0 and p + -2147483648 >= 0 and d0  >= 0 and p0 -d0  + -2 >= 0 and d2  >= 0 and p2 -d2  + -1 >= 0 and d3  >= 0 and p2 -d3  + -1 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<7,3>
  %e = presburger.equal %set, %r : !presburger.set<7,3>, !presburger.set<7,3>
  return %e : i1
}

// ----
