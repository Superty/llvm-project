// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance151
func @performance151() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8)[] : (d7 + -1 = 0 and d6  = 0 and d5  = 0 and d4  = 0 and d2 + -2 = 0 and d0 + -5 = 0 and -d1 + 2000 >= 0 and d3  >= 0 and d1 + -d3 + -1 >= 0 and -d3 + 8d8 + 7 >= 0 and d3 + -8d8  >= 0  or d7  = 0 and d6  = 0 and d5  = 0 and d4  = 0 and d3  = 0 and d2 + -3 = 0 and d0 + -5 = 0 and d1 + -1 >= 0 and -d1 + 2000 >= 0 and -d1 + 8d8 + 7 >= 0 and d1 + -8d8  >= 0  or d7  = 0 and d6  = 0 and d5  = 0 and d4  = 0 and d3  = 0 and d2  = 0 and d0 + -8 = 0 and d1  >= 0 and -d1 + 1999 >= 0 and d1 + 8d8 + -1992 >= 0 and -d1 + -8d8 + 1999 >= 0  or d8 + -250 = 0 and d7  = 0 and d6  = 0 and d5  = 0 and d4  = 0 and d3  = 0 and d2  = 0 and d1  = 0 and d0 + -6 = 0  or d8  = 0 and d7 + -1 = 0 and d6  = 0 and d5  = 0 and d4  = 0 and d3  = 0 and d2  = 0 and d1  = 0 and d0 + -3 = 0 )">

  %r = presburger.coalesce %set : !presburger.set<9,0>
  %e = presburger.equal %set, %r : !presburger.set<9,0>, !presburger.set<9,0>
  return %e : i1
}

// ----
