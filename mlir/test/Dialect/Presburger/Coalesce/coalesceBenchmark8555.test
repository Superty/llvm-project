// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance8555
func @performance8555() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10)[] : (d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and d8  + -499 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d2  + -2 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and d8  + -499 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -500 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d4  + -2 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d4  >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  = 0 and d4  + -1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and -d0 + d5  >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and d4  + -1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and d0 + -d5  + -2 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  = 0 and -d0 + d5  + 1 = 0 and d4  + -1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d6  + -7 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and -d0 + d5  + 1 = 0 and d4  + -1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d6  + 5 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  = 0 and d6  + -6 = 0 and -d0 + d5  + 1 = 0 and d4  + -1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d1 + d7  + -999 >= 0  or d1 + d10  + -998 = 0 and -d0 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and d6  + -6 = 0 and -d0 + d5  + 1 = 0 and d4  + -1 = 0 and d2  + -1 = 0 and d0  + -1 >= 0 and -d0  + 998 >= 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d1 + -d7  + 998 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<11,0>
  %e = presburger.equal %set, %r : !presburger.set<11,0>, !presburger.set<11,0>
  return %e : i1
}

// ----
