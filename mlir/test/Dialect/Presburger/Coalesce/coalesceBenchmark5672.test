// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance5672
func @performance5672() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5)[p0] : (-p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and -d2 + 1 >= 0  or d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and -p0 d1 + -d3 + -2 >= 0  or p0 -d1 + d3 + 1 = 0 and d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and -d4 + -1 >= 0  or d4 + -2 = 0 and p0 -d1 + d3 + 1 = 0 and d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and -d5 + -1 >= 0  or d4  = 0 and p0 -d1 + d3 + 1 = 0 and d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and d5 + -1 >= 0  or d4  = 0 and p0 -d1 + d3 + 1 = 0 and d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and -d5  >= 0  or d4 + -2 = 0 and p0 -d1 + d3 + 1 = 0 and d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 and d5  >= 0 and -d5 + 999 >= 0  or d4 + -1 = 0 and p0 -d1 + d3 + 1 = 0 and d2 + -2 = 0 and -p0 d0  = 0 and -p0 d1 + -1 >= 0 and -d1 + 1199 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<6,1>
  %e = presburger.equal %set, %r : !presburger.set<6,1>, !presburger.set<6,1>
  return %e : i1
}

// ----
