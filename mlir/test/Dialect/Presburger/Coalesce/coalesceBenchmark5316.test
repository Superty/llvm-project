// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance5316
func @performance5316() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9)[] : (d9  + -998 = 0 and d8  + -1199 = 0 and d7  + -999 = 0 and d0  + -3 >= 0  or d9  + -998 = 0 and d8  + -1199 = 0 and d7  + -999 = 0 and d0  + -2 = 0 and d1  + -1000 >= 0  or -d1 + d9  + 1 = 0 and d8  + -1199 = 0 and -d1 + d7  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d2  + -1 >= 0  or -d1 + d9  + 2 = 0 and d8  + -1199 = 0 and -d1 + d7  + 1 = 0 and d0  + -2 = 0 and d1  + -2 >= 0 and -d1  + 999 >= 0 and -d2  + -1 >= 0  or -d1 + d9  + 1 = 0 and d8  + -1199 = 0 and -d1 + d7  = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  + -1200 >= 0  or -d1 + d9  + 2 = 0 and d8  + -1199 = 0 and -d1 + d7  + 1 = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -2 >= 0 and -d1  + 999 >= 0 and -d3  + -1 >= 0  or -d1 + d9  + 1 = 0 and -d3 + d8  = 0 and -d1 + d7  = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  >= 0 and -d3  + 1199 >= 0 and d4  + -2 >= 0  or -d1 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and -d1 + d7  = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  + -1 >= 0 and -d3  + 1199 >= 0 and -d4  >= 0  or -d1 + d9  + 2 = 0 and d8  + -1199 = 0 and -d1 + d7  + 1 = 0 and d3  = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -2 >= 0 and -d1  + 999 >= 0 and -d4  >= 0  or -d1 + d9  + 1 = 0 and -d3 + d8  = 0 and -d1 + d7  = 0 and d4  + -1 = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  >= 0 and -d3  + 1199 >= 0 and -d1 + d5  + -1 >= 0  or -d1 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and -d1 + d7  = 0 and d4  + -1 = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  + -1 >= 0 and -d3  + 1199 >= 0 and -d5  + -1 >= 0  or -d5 + d9  = 0 and -d3 + d8  = 0 and -d1 + d7  = 0 and d4  + -1 = 0 and d2  = 0 and d0  + -2 = 0 and -d1  + 999 >= 0 and d3  >= 0 and -d3  + 1199 >= 0 and d5  >= 0 and d1 + -d5  + -1 >= 0 and d6  + -2 >= 0  or -d5 + d9  + 1 = 0 and -d3 + d8  = 0 and -d1 + d7  = 0 and d4  + -1 = 0 and d2  = 0 and d0  + -2 = 0 and -d1  + 999 >= 0 and d3  >= 0 and -d3  + 1199 >= 0 and d5  + -1 >= 0 and d1 + -d5  + -1 >= 0 and -d6  + 1 >= 0  or -d1 + d9  + 2 = 0 and d8  + -1199 = 0 and -d1 + d7  + 1 = 0 and d4  + -1 = 0 and d3  = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -2 >= 0 and -d1  + 999 >= 0 and -d5  + -1 >= 0  or -d1 + d9  + 1 = 0 and -d3 + d8  = 0 and -d1 + d7  = 0 and -d1 + d5  = 0 and d4  + -1 = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  >= 0 and -d3  + 1199 >= 0  or -d1 + d9  + 1 = 0 and -d3 + d8  + 1 = 0 and -d1 + d7  = 0 and d5  = 0 and d4  + -1 = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -1 >= 0 and -d1  + 999 >= 0 and d3  + -1 >= 0 and -d3  + 1199 >= 0 and -d6  + 1 >= 0  or -d1 + d9  + 2 = 0 and d8  + -1199 = 0 and -d1 + d7  + 1 = 0 and d5  = 0 and d4  + -1 = 0 and d3  = 0 and d2  = 0 and d0  + -2 = 0 and d1  + -2 >= 0 and -d1  + 999 >= 0 and -d6  + 1 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<10,0>
  %e = presburger.equal %set, %r : !presburger.set<10,0>, !presburger.set<10,0>
  return %e : i1
}

// ----
