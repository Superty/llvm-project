// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance8597
func @performance8597() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7)[] : (d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d2  + -2 >= 0  or d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d2  + -2 >= 0  or d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -500 >= 0  or d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -500 >= 0  or d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d4  + -1 >= 0  or d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d4  + -1 >= 0  or d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d4  + -1 >= 0  or d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d4  + -1 >= 0  or d4  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and d1 + -d5  + -2 >= 0  or d4  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and -d1 + d5  >= 0  or d4  = 0 and d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and d1 + -d5  + -2 >= 0  or d4  = 0 and d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and -d1 + d5  >= 0  or -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d6  + 3 >= 0  or -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d6  + -5 >= 0  or d6  + -4 = 0 and -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d7  >= 0  or d6  + -4 = 0 and -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d7  + -1 >= 0  or d6  = 0 and -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d7  >= 0  or d6  = 0 and -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d7  + -1 >= 0  or -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  + -1 >= 0 and -d3  + 499 >= 0 and -d6  + -1 >= 0  or -d1 + d5  + 1 = 0 and d4  = 0 and d2  + -1 = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 998 >= 0 and d3  >= 0 and -d3  + 499 >= 0 and d6  + -1 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<8,0>
  %e = presburger.equal %set, %r : !presburger.set<8,0>, !presburger.set<8,0>
  return %e : i1
}

// ----
