// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance4498
func @performance4498() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10)[] : (-d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and d2  + -1 = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and d0 + -d3  + -1 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and d2  = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d0 + d3  + -1 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d3  + 998 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d2  = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and d3  + -1000 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and -d0 + d3  = 0 and d2  + -1 = 0 and -d0  + 998 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d4  >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and -d0 + d3  = 0 and d2  = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and d4  + -3 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and -d0 + d3  = 0 and d2  + -1 = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d0 + -d4  + 998 >= 0 and -d4  >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d3  + -999 = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d4  + -1 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d3  + -999 = 0 and d2  = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and d4  + -3 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and d4  + -2 = 0 and -d0 + d3  = 0 and d2  = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d1 + d5  + -1 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and d4  + -1 = 0 and -d0 + d3  = 0 and d2  + -1 = 0 and -d0  + 998 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and d1 + -d5  + -1 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d4  + -2 = 0 and d3  + -999 = 0 and d2  = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d1 + d5  + -1 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d4  = 0 and d3  + -999 = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and d1 + -d5  + -1 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and -d1 + d5  = 0 and d4  + -2 = 0 and -d0 + d3  = 0 and d2  = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and d6  + -1 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and -d1 + d5  = 0 and d4  + -1 = 0 and -d0 + d3  = 0 and d2  + -1 = 0 and -d0  + 998 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d6  >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and -d1 + d5  = 0 and d4  + -2 = 0 and d3  + -999 = 0 and d2  = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and d6  + -1 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and -d1 + d5  = 0 and d4  = 0 and d3  + -999 = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d6  + -1 >= 0 and d8  >= 0 and -d8  + 998 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and d6  + -1 = 0 and -d1 + d5  = 0 and d4  + -1 = 0 and -d0 + d3  = 0 and d2  + -1 = 0 and -d0  + 998 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d7  >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or -d0 + d8 + d10  + 1 = 0 and -d1 + d9  = 0 and d6  = 0 and -d1 + d5  = 0 and d4  + -2 = 0 and -d0 + d3  = 0 and d2  = 0 and -d0  + 999 >= 0 and d1  >= 0 and -d1  + 1199 >= 0 and d7  + -1 >= 0 and d8  >= 0 and d0 + -d8  + -1 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d6  = 0 and -d1 + d5  = 0 and d4  = 0 and d3  + -999 = 0 and d2  + -1 = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and -d7  >= 0 and d8  >= 0 and -d8  + 998 >= 0  or d8 + d10  + -998 = 0 and -d1 + d9  = 0 and d6  = 0 and -d1 + d5  = 0 and d4  + -2 = 0 and d3  + -999 = 0 and d2  = 0 and d0  + -999 = 0 and d1  >= 0 and -d1  + 1199 >= 0 and d7  + -1 >= 0 and d8  >= 0 and -d8  + 998 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<11,0>
  %e = presburger.equal %set, %r : !presburger.set<11,0>, !presburger.set<11,0>
  return %e : i1
}

// ----
