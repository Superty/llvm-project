// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance9066
func @performance9066() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6)[] : (d3  = 0 and d0  + -1 >= 0 and -d0  + 118 >= 0 and d1  + -1 >= 0 and -d1  + 118 >= 0 and d2  + -1 >= 0 and -d2  + 118 >= 0 and d4  >= 0 and -d4  + 117 >= 0 and -d0 + -d1 + d4 + d5  + 3 >= 0 and d5  >= 0 and d0 + -d1 + -d4 + d5  + 1 >= 0 and -d0 + d1 + d4 + -d5  + 1 >= 0 and -d5  + 117 >= 0 and d0 + d1 + -d4 + -d5  + -1 >= 0 and -d0 + -d2 + d4 + d6  + 3 >= 0 and -d1 + -d2 + d5 + d6  + 3 >= 0 and d6  >= 0 and d1 + -d2 + -d5 + d6  + 1 >= 0 and d0 + -d2 + -d4 + d6  + 1 >= 0 and -d0 + d2 + d4 + -d6  + 1 >= 0 and -d1 + d2 + d5 + -d6  + 1 >= 0 and -d6  + 117 >= 0 and d1 + d2 + -d5 + -d6  + -1 >= 0 and d0 + d2 + -d4 + -d6  + -1 >= 0  or d6  + -117 = 0 and -d1 + d5  + 1 = 0 and -d0 + d4  + 1 = 0 and d2  + -119 = 0 and d0  + -1 >= 0 and -d0  + 118 >= 0 and d1  + -1 >= 0 and -d1  + 118 >= 0 and d3  >= 0 and -d3  + 499 >= 0  or d6  = 0 and -d1 + d5  + 1 = 0 and -d0 + d4  + 1 = 0 and d2  = 0 and d0  + -1 >= 0 and -d0  + 118 >= 0 and d1  + -1 >= 0 and -d1  + 118 >= 0 and d3  >= 0 and -d3  + 499 >= 0  or -d2 + d6  + 1 = 0 and d5  + -117 = 0 and -d0 + d4  + 1 = 0 and d1  + -119 = 0 and d0  + -1 >= 0 and -d0  + 118 >= 0 and d2  + -1 >= 0 and -d2  + 118 >= 0 and d3  >= 0 and -d3  + 499 >= 0  or -d2 + d6  + 1 = 0 and d5  = 0 and -d0 + d4  + 1 = 0 and d1  = 0 and d0  + -1 >= 0 and -d0  + 118 >= 0 and d2  + -1 >= 0 and -d2  + 118 >= 0 and d3  >= 0 and -d3  + 499 >= 0  or -d2 + d6  + 1 = 0 and -d1 + d5  + 1 = 0 and d4  + -117 = 0 and d0  + -119 = 0 and d1  + -1 >= 0 and -d1  + 118 >= 0 and d2  + -1 >= 0 and -d2  + 118 >= 0 and d3  >= 0 and -d3  + 499 >= 0  or -d2 + d6  + 1 = 0 and -d1 + d5  + 1 = 0 and d4  = 0 and d0  = 0 and d1  + -1 >= 0 and -d1  + 118 >= 0 and d2  + -1 >= 0 and -d2  + 118 >= 0 and d3  >= 0 and -d3  + 499 >= 0  or -d2 + d6  + 1 = 0 and -d1 + d5  + 1 = 0 and -d0 + d4  + 1 = 0 and d3  = 0 and d0  + -1 >= 0 and -d0  + 118 >= 0 and d1  + -1 >= 0 and -d1  + 118 >= 0 and d2  + -1 >= 0 and -d2  + 118 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<7,0>
  %e = presburger.equal %set, %r : !presburger.set<7,0>, !presburger.set<7,0>
  return %e : i1
}

// ----
