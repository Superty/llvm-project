// RUN: mlir-opt -canonicalize %s | FileCheck %s

// CHECK-LABEL: func @performance58
func @performance58() -> i1 {
  // CHECK-NEXT: %[[S:.*]] = constant true
  // CHECK-NEXT: return %[[S]]
  %set = presburger.set #presburger<"(d0, d1, d2, d3, d4, d5, d6, d7, d8, d9, d10)[] : (d9 + -512 = 0 and -d1 + d8  = 0 and d7 + -8 = 0 and d6 + -2 = 0 and d4 + -7 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 and d5  >= 0 and -d5 + 511 >= 0 and -d5 + 8d10 + 7 >= 0 and d5 + -8d10  >= 0  or d9 + -512 = 0 and -d1 + d8  = 0 and d7 + -1 = 0 and d6 + -3 = 0 and d4 + -7 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 and d5  >= 0 and -d5 + 511 >= 0 and -d5 + 8d10 + 7 >= 0 and d5 + -8d10  >= 0  or -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -8 = 0 and d6 + -2 = 0 and d4 + -1 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 and d5  >= 0 and -d5 + 511 >= 0 and -d5 + 8d10 + 7 >= 0 and d5 + -8d10  >= 0  or -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -2 = 0 and d6 + -1 = 0 and d4 + -7 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 and d5  >= 0 and -d5 + 511 >= 0 and -d5 + 8d10 + 7 >= 0 and d5 + -8d10  >= 0  or -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -1 = 0 and d6 + -3 = 0 and d4 + -1 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 and d5  >= 0 and -d5 + 511 >= 0 and -d5 + 8d10 + 7 >= 0 and d5 + -8d10  >= 0  or -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -1 = 0 and d6 + -1 = 0 and d4 + -1 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 and d5  >= 0 and -d5 + 511 >= 0 and -d5 + 8d10 + 7 >= 0 and d5 + -8d10  >= 0  or d10 + -64 = 0 and d9 + -512 = 0 and -d1 + d8  = 0 and d7 + -7 = 0 and d6  = 0 and d5  = 0 and d4 + -10 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0  or d10 + -64 = 0 and d9 + -512 = 0 and -d1 + d8  = 0 and d7 + -2 = 0 and d6  = 0 and d5  = 0 and d4 + -9 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0  or d10 + -64 = 0 and d9 + -512 = 0 and -d1 + d8  = 0 and d7 + -1 = 0 and d6  = 0 and d5  = 0 and d4 + -11 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0  or d10 + -64 = 0 and -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -8 = 0 and d6  = 0 and d5  = 0 and d4 + -4 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0  or d10 + -64 = 0 and -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -2 = 0 and d6  = 0 and d5  = 0 and d4 + -3 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0  or d10 + -64 = 0 and -d3 + d9  = 0 and -d1 + d8  = 0 and d7 + -1 = 0 and d6  = 0 and d5  = 0 and d4 + -5 = 0 and d2 + -1 = 0 and d0 + -1 = 0 and d1  >= 0 and -d1 + 511 >= 0 and d3  >= 0 and -d3 + 511 >= 0 )">

  %r = presburger.coalesce %set : !presburger.set<11,0>
  %e = presburger.equal %set, %r : !presburger.set<11,0>, !presburger.set<11,0>
  return %e : i1
}

// ----
